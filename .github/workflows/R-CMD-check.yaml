name: R-CMD-check

on: [push, pull_request]

jobs:
  R-CMD-check:
    
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (R version ${{ matrix.config.r }})

    strategy: 
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-16.04,   r: '3.6.1', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RSPM: ${{ matrix.config.rspm }}

    steps:

      - name: Check out repository
        uses: actions/checkout@v2

      - name: Install R
        uses: r-lib/actions/setup-r@master
        with: 
          r-version: ${{ matrix.config.r }}


      # Steps to update/install Ubuntu packages
      - name: Update packages
        run: sudo apt-get -y update

      - name: Install libcurl (to install R libraries from source)
        run: sudo apt-get install libcurl4-openssl-dev

      - name: Install gdal (to use R library sf)
        run: |
          sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable
          sudo apt-get install -y libudunits2-dev libgdal-dev libgeos-dev libproj-dev


      # Steps to install R packages
      - name: Install "base" R packages, get within-package dependencies 
        run: |
          install.packages(c("remotes", "rcmdcheck", "testthat", "covr"))
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-1-

      - name: Install other R system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}


      # After success
      - name: Test coverage
        run: covr::codecov()
        shell: Rscript {0}